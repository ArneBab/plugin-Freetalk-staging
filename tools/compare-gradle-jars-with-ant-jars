#!/bin/bash
set -o nounset
set -o errexit
set -o errtrace
trap 'echo "Error at line $LINENO, exit code $?" >&2' ERR

case "$OSTYPE" in
	darwin*)
		echo "This script does not work on macOS, run it on Linux instead!" >&2
		echo "(macOS' mktemp does not support the arguments we use.)" >&2
		exit 1
		;;
	*)
		# FIXME: Disable on Windows as well using the correct OSTYPE printed hereby:
		echo "OS: $OSTYPE" >&2
		;;
esac

tmpdir="$(mktemp --directory)"
trap 'rm -rf -- "$tmpdir"' EXIT

if [ -e "./gradlew" ] ; then
	# The GitHub Actions script  expects us to use ./gradlew to test compatibility.
	echo "Found ./gradlew, using it instead of system's Gradle."
	shopt -s expand_aliases
	unalias -a
	alias gradle=./gradlew
fi

check_jar() {
local jar="$1"
local from_ant="$(mktemp --tmpdir="$tmpdir" --directory --suffix=.from-ant)"
local from_gradle="$(mktemp --tmpdir="$tmpdir" --directory --suffix=.from-gradle)"

echo "Testing jar: $jar"
echo "Building with Ant..."
gradle clean &> /dev/null
[ ! -e "$jar" ] # WARNING: ! must be inside for errexit to work here
ant -Dtest.skip=true clean dist &> /dev/null
unzip -qq "$jar" -d "$from_ant"

echo "Building with Gradle..."
ant clean &> /dev/null
[ ! -e "$jar" ] # WARNING: ! must be inside for errexit to work here
gradle clean jar testJar &> /dev/null
unzip -qq "$jar" -d "$from_gradle"

echo "Deleting files which only Ant bundles: package-info.class, Version.java (not .class)..."
shopt -s globstar
shopt -s nullglob
# These are non-executable classes which only exist as a place to hold JavaDoc, Gradle correctly
# excludes them, so ignore them.
rm --force -- "$from_ant"/**/package-info.class
# Ant for some reason not only includes Version.class but also .java, it shouldn't, so ignore it.
rm --force -- "$from_ant"/plugins/Freetalk/Version.java

echo "Deleting file which only Gradle bundles: Version.properties ..."
# First test if it exists though so we detect failure to include it.
[ -f "$from_gradle"/plugins/Freetalk/Version.properties ]
rm --force -- "$from_gradle"/plugins/Freetalk/Version.properties

echo "Deleting file which will intentionally differ among Ant and Gradle: Version.class ..."
[ -f    "$from_ant"/plugins/Freetalk/Version.class ]
[ -f "$from_gradle"/plugins/Freetalk/Version.class ]
rm --force -- "$from_ant"/plugins/Freetalk/Version.class \
           "$from_gradle"/plugins/Freetalk/Version.class

echo "Removing Ant-only stuff from MANIFEST.MF..."
sed --regexp-extended --expression='/^Ant(.*)$/d' \
	--expression='/^Created-By(.*)/d' \
	--in-place "$from_ant/META-INF/MANIFEST.MF"

# To test whether the diff fails if it should:
#echo a >> "$from_gradle/plugins/Freetalk/Freetalk.class"

echo "Diffing:"
echo "Ant output:    $from_ant"
echo "Gradle output: $from_gradle"
if diff --recursive "$from_ant" "$from_gradle" ; then
	echo "JARs are identical!"
	return 0
else
	echo "JARs do not match! Not deleting output so you can inspect it." >&2
	trap - EXIT
	return 1
fi
}

check_jar 'dist/Freetalk.jar'
check_jar 'build-test/Freetalk-with-unit-tests.jar'
